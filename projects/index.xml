<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Bits &amp; Pixies</title>
    <link>/projects/</link>
    <description>Recent content in Projects on Bits &amp; Pixies</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 Aug 2018 20:00:01 +0200</lastBuildDate>
    
	<atom:link href="/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ray Tracing In One Weekend</title>
      <link>/projects/raytracinginaweekend/</link>
      <pubDate>Mon, 13 Aug 2018 20:00:01 +0200</pubDate>
      
      <guid>/projects/raytracinginaweekend/</guid>
      <description>This is my own implementation of Ray Tracing in a weekend by Peter Shirley. It&amp;rsquo;s pretty simple and follows the book closely. The the two main modifications I made were using stb_image.h to output .png files and reorganizing the data a little so that the computation could be parallelized using OpenMP. The performance gain was great compared to the small amount of work it required.
If you&amp;rsquo;re not familiar with the book it involves creating a simple ray tracer from scratch.</description>
    </item>
    
    <item>
      <title>VirtuaLightJS</title>
      <link>/projects/virtualightjs/</link>
      <pubDate>Sun, 13 Aug 2017 20:00:01 +0200</pubDate>
      
      <guid>/projects/virtualightjs/</guid>
      <description>In 2017 I started studying computer graphics at school. We were given a lot of boiler plate code during practical exercises. Sometimes it felt like everything was working through some kind of dark magic. It was especially frustrating when something wouldn&amp;rsquo;t work. There were too many unknowns.
So during the summer holiday I gave myself the goal to write my own prototype from scratch. I decided to use WebGL because I knew a little JavaScript and figured it had the fastest iteration cycle.</description>
    </item>
    
  </channel>
</rss>